spring.application.name=log-receiver
server.port=8082 # Or any other free port

# Kafka Consumer configuration
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=log-receiver-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset=earliest # Start reading from the beginning of the topic

# Elasticsearch configuration
spring.data.elasticsearch.client.reactive.endpoints=localhost:9200
spring.data.elasticsearch.client.rest.uris=http://localhost:9200
# If you enable security in Docker Compose, add:
# spring.data.elasticsearch.client.rest.username=elastic
# spring.data.elasticsearch.client.rest.password=your_password

# Topic name
log.kafka.topic.name=raw-logs

# For Spring Data Elasticsearch to create the index based on LogEntry mapping
spring.data.elasticsearch.repositories.enabled=true